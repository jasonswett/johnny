#!/usr/bin/env ruby

require File.expand_path('../../config/environment', __FILE__)

case ARGV[0]
when "index"
  book_collection = BookCollection.new
  book_collection.index!
when "tokens"
  Token.most_frequent_first.limit(30).each do |token|
    puts "#{token.value} (#{token.annotations['frequency']})"
  end
when "token"
  token = Token.find_by(value: ARGV[1])

  if token.present?
    puts token.details
  else
    puts "No such token. Sorry bro"
  end
when "related"
  token = Token.find_by(value: ARGV[1])
  puts token.related_words.join(", ")
when "pos"
  part_of_speech = ARGV[1]
  Token.part_of_speech(part_of_speech).limit(30).each do |token|
    puts "#{token.value} (#{token.annotations['frequency']})"
  end
when "analyze"
  words = ARGV[1..-1]
  sentence = Sentence.new(words.join(" "))
  tokens = sentence.tokens.map { |token| Token.find_by(value: token.value) || token }
  parts_of_speech = tokens.map { |token| token.annotations["part_of_speech"] || "?" }
  puts parts_of_speech.join(" ")
when "eval"
  parts_of_speech = ARGV[1..-1]
  expression_mask = ExpressionMask.new(parts_of_speech.join(" "))
  puts expression_mask.evaluate
when "generate"
  ARGV[2].to_i.times do
    print ExpressionMask.generate_sentence(anchor_word: ARGV[1]) + " "
  end
else
  puts "Invalid input"
end
